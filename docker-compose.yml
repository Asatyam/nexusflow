version: '3.8'
services:
  postgres:
    image: postgres:15
    container_name: nexusflow_postgres
    environment:
      POSTGRES_USER: ${NEXUSFLOW_POSTGRES_USER}
      POSTGRES_PASSWORD: ${NEXUSFLOW_POSTGRES_PASSWORD}
      POSTGRES_DB: nexusflow_db
    ports:
        - "5433:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data

  zookeeper:
    image: confluentinc/cp-zookeeper:7.2.15
    container_name: nexusflow_zookeeper
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181

  kafka:
    image: confluentinc/cp-kafka:7.4.0
    container_name: nexusflow_kafka
    depends_on:
      - zookeeper
    ports:
        - "9092:9092"
    environment:
      KAFKA_ZOOKEEPER_CONNECT: 'zookeeper:2181'
      KAFKA_BROKER_ID: 1
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: 'PLAINTEXT:PLAINTEXT, PLAINTEXT_INTERNAL:PLAINTEXT'
      KAFKA_ADVERTISED_LISTENERS: 'PLAINTEXT://localhost:9092, PLAINTEXT_INTERNAL://kafka:29092'
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1

  minio:
    image: minio/minio:latest
    container_name: nexusflow_minio
    command: server /data --console-address ":9001"
    ports:
        - "9000:9000"
        - "9001:9001"
    environment:
        MINIO_ROOT_USER: ${NEXUSFLOW_MINIO_ROOT_USER}
        MINIO_ROOT_PASSWORD: ${NEXUSFLOW_MINIO_ROOT_PASSWORD}
    volumes:
      - minio_data:/data
  traefik:
    image: traefik:v3.5.0
    container_name: nexusflow_traefik
    command: --api.insecure=true --providers.docker=true
    ports:
      - "80:80"
      - "8080:8080"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock

  workflow-manager:
    build:
      context: .
      dockerfile: services/workflow-manager/Dockerfile
    container_name: nexusflow_workflow_manager
    environment:
      SPRING_DATASOURCE_URL: jdbc:postgresql://postgres:5432/nexusflow_db
      NEXUSFLOW_POSTGRES_USER: ${NEXUSFLOW_POSTGRES_USER}
      NEXUSFLOW_POSTGRES_PASSWORD: ${NEXUSFLOW_POSTGRES_PASSWORD}
      NEXUSFLOW_JWT_SECRET: ${NEXUSFLOW_JWT_SECRET}
      SPRING_KAFKA_BOOTSTRAP_SERVERS: kafka:29092

    depends_on:
      - postgres
      - kafka

    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.workflow-manager.rule=PathPrefix(`/api/workflows`)"
      - "traefik.http.services.workflow-manager.loadbalancer.server.port=8080"

  task-runner:
    build:
      context: .
      dockerfile: services/task-runner/Dockerfile
    container_name: nexusflow_task_runner
    environment:
      SPRING_KAFKA_BOOTSTRAP_SERVERS: kafka:29092
      MINIO_URL: http://minio:9000
      MINIO_ACCESS_KEY: ${NEXUSFLOW_MINIO_ROOT_USER}
      MINIO_SECRET_KEY: ${NEXUSFLOW_MINIO_ROOT_PASSWORD}

    depends_on:
      - kafka
      - minio

  auth-service:
    build:
      context: .
      dockerfile: services/auth-service/Dockerfile
    container_name: nexusflow_auth_service
    environment:
      NEXUSFLOW_JWT_SECRET: ${NEXUSFLOW_JWT_SECRET}
      NEXUSFLOW_JWT_EXPIRATION_MS: ${NEXUSFLOW_JWT_EXPIRATION_MS}
      SPRING_DATASOURCE_URL: jdbc:postgresql://postgres:5432/nexusflow_db
      NEXUSFLOW_POSTGRES_USER: ${NEXUSFLOW_POSTGRES_USER}
      NEXUSFLOW_POSTGRES_PASSWORD: ${NEXUSFLOW_POSTGRES_PASSWORD}

    depends_on:
      - postgres

    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.auth-service.rule=PathPrefix(`/api/auth/`)"
      - "traefik.http.services.auth-service.loadbalancer.server.port=8080"

volumes:
    postgres_data:
    minio_data: